#ifndef _RLC_HUFFMAN_H
#define _RLC_HUFFMAN_H

#include <stdint.h>
#include <stdlib.h>
#include <avlib.h>
#include <bitstream.h>

namespace avlib
{

class CHuffmanCodeSize
{
public:
	CHuffmanCodeSize();
	CHuffmanCodeSize(int len);
	~CHuffmanCodeSize();
	uint16_t * Code;
	uint8_t * Size;
	int Length;
};

class CRLCHuffman
{
public:
	CRLCHuffman();
	virtual ~CRLCHuffman();
	virtual void encodeBlock(const int16_t * pSrc, CPoint p, CSize s, CBitstream * pBstr, CHuffmanCodeSize * pDC, CHuffmanCodeSize * pAC);
protected:
	void createHuffmanTable(CHuffmanCodeSize * pHcs, const uint8_t * bitsTable, const uint8_t * valTable);
	CHuffmanCodeSize * m_YDC;
	CHuffmanCodeSize * m_YAC;
	CHuffmanCodeSize * m_UVDC;
	CHuffmanCodeSize * m_UVAC;
	
	static const uint8_t def_DC_val[];
	static const uint8_t def_DC_Y_len[];
	static const uint8_t def_DC_UV_len[];
	static const uint8_t def_AC_Y_val[];
	static const uint8_t def_AC_Y_len[];
	static const uint8_t def_AC_UV_len[];
	static const uint8_t def_AC_UV_val[];
};

}

#endif //_RLC_HUFFMAN_H
